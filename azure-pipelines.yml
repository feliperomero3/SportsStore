# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: '**/*.sln'
    feedsToUse: 'select'
    verbosityRestore: 'Normal' 

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'feliperomero3-sonarcloud'
    organization: 'feliperomero3'
    scannerMode: 'MSBuild'
    projectKey: 'feliperomero3_SportsStore'
    projectName: 'SportsStore'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: build
    projects: '**/*.sln'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Test (coverage reports)'
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--no-build --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)\TestResults\Coverage\'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish coverage reports'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/TestResults/Coverage/*cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: 'Test (code coverage)'
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--collect "Code Coverage"'

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud analysis'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: publish
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'

- task: SonarCloudPublish@1
  displayName: 'Publish SonarCloud analysis results'
  inputs:
    pollingTimeoutSec: '300'
